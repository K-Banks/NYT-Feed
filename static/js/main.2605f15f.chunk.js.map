{"version":3,"sources":["assets/nyt-logo.png","components/article/article.js","components/toolbar/toolbar.js","constants/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Article","props","abstract","length","substring","react_default","a","createElement","className","multimedia","src","url","alt","require","href","title","byline","Toolbar","sections","menuOptions","forEach","section","push","key","value","onClick","changeSelectedSection","getSelectedSection","showDropdownMenu","state","selectedSection","displayMenu","toggle","liveFeed","newState","articles","queryStatus","sectionsConstant","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","freshState","assign","getArticles","bind","assertThisInitialized","handleResponseError","hideDropdownMenu","buildURLRequest","toggleLiveOrTop","_this2","fetch","then","response","status","json","body","articleState","results","setState","console","log","event","_this3","preventDefault","document","addEventListener","_this4","removeEventListener","_this5","process","_this6","currentState","toolbar_toolbar","class","map","article","components_article_article","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2605f15f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nyt-logo.8662bc4e.png\";","import React from 'react';\r\nimport './article.css';\r\n\r\nfunction Article(props){\r\n\r\n  if (props.props) {\r\n\r\n    let abstract = '';\r\n    if (props.props.abstract.length > 100) {\r\n      abstract = props.props.abstract.substring(0, 100) + '...'\r\n    } else {\r\n      abstract = props.props.abstract\r\n    }\r\n\r\n    return(\r\n      <div className=\"article-container\">\r\n        <div></div>\r\n        <div className=\"image\">\r\n\r\n          {props.props.multimedia[0] ? (\r\n            <img src={props.props.multimedia[0].url} alt=\"article\"></img>\r\n          ) : (\r\n            <img src={require('../../assets/nyt-logo.png')} alt=\"article\"></img>\r\n          )}\r\n\r\n        </div>\r\n        <div className=\"text\">\r\n          <h3><a href={props.props.url}>{props.props.title}</a></h3>\r\n          <h5>{props.props.byline}</h5>\r\n          <p>{abstract}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Article;\r\n","import React from 'react';\r\nimport './toolbar.css';\r\n\r\nfunction Toolbar(props){\r\n\r\n    let sections = props.props;\r\n    let menuOptions = [];\r\n    sections.forEach((section) =>\r\n      menuOptions.push(<li key={section.value} onClick={() => {getSelectedSection(section)}}>{section.title}</li>));\r\n\r\n    function getSelectedSection(section) {\r\n      props.changeSelectedSection(section)\r\n    }\r\n\r\n    return (\r\n      <div className=\"toolbar-container\">\r\n        <div className=\"dropdown\">\r\n          <div className=\"button\" onClick={props.showDropdownMenu}> {props.state.selectedSection.title} </div>\r\n\r\n          { props.state.displayMenu ? (\r\n            <ul>\r\n              {menuOptions}\r\n            </ul>\r\n          ):\r\n          (\r\n            null\r\n          )}\r\n      </div>\r\n      <div className=\"button toggle\" onClick={props.toggle}>\r\n        {props.state.liveFeed ? (\r\n          'Click for Top Stories'\r\n        ) : (\r\n          'Click for Recent Stories'\r\n        )}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Toolbar;\r\n","export const newState = {\r\n  articles: [],\r\n  selectedSection: {\r\n    title: 'Select Section',\r\n    value: 'all'\r\n  },\r\n  liveFeed: true,\r\n  queryStatus: true,\r\n  displayMenu: false,\r\n};\r\n\r\nexport const sectionsConstant = [\r\n  {\r\n    title: 'All',\r\n    value: 'all'\r\n  },\r\n  {\r\n    title: 'Arts',\r\n    value: 'arts'\r\n  },\r\n  {\r\n    title: 'Automobiles',\r\n    value: 'automobiles'\r\n  },\r\n  {\r\n    title: 'Books',\r\n    value: 'books'\r\n  },\r\n  {\r\n    title: 'Business',\r\n    value: 'business'\r\n  },\r\n  {\r\n    title: 'Food',\r\n    value: 'food'\r\n  },\r\n  {\r\n    title: 'Health',\r\n    value: 'health'\r\n  },\r\n  {\r\n    title: 'Magazine',\r\n    value: 'magazine'\r\n  },\r\n  {\r\n    title: 'Movies',\r\n    value: 'movies'\r\n  },\r\n  {\r\n    title: 'Obituaries',\r\n    value: 'obituaries'\r\n  },\r\n  {\r\n    title: 'Opinion',\r\n    value: 'opinion'\r\n  },\r\n  {\r\n    title: 'Science',\r\n    value: 'science'\r\n  },\r\n  {\r\n    title: 'Sports',\r\n    value: 'sports'\r\n  },\r\n  {\r\n    title: 'Technology',\r\n    value: 'technology'\r\n  },\r\n  {\r\n    title: 'Theater',\r\n    value: 'theater'\r\n  },\r\n  {\r\n    title: 'Travel',\r\n    value: 'travel'\r\n  },\r\n  {\r\n    title: 'World',\r\n    value: 'world'\r\n  }];\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Article from './components/article/article.js';\r\nimport Toolbar from './components/toolbar/toolbar.js';\r\nimport { newState, sectionsConstant } from './constants';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let freshState = Object.assign({}, newState);\r\n    this.state = freshState;\r\n    this.getArticles = this.getArticles.bind(this);\r\n    this.handleResponseError = this.handleResponseError.bind(this);\r\n    this.showDropdownMenu = this.showDropdownMenu.bind(this);\r\n    this.hideDropdownMenu = this.hideDropdownMenu.bind(this);\r\n    this.changeSelectedSection = this.changeSelectedSection.bind(this);\r\n    this.buildURLRequest = this.buildURLRequest.bind(this);\r\n    this.toggleLiveOrTop = this.toggleLiveOrTop.bind(this);\r\n\r\n    this.getArticles();\r\n  }\r\n\r\n  getArticles() {\r\n    let url = this.buildURLRequest();\r\n    fetch(url).then(\r\n      response => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else {\r\n          this.handleResponseError(response);\r\n          return null;\r\n        }\r\n      }\r\n    ).then(\r\n      body => {\r\n        if (body) {\r\n          let articleState = body.results;\r\n          this.setState(\r\n            {\r\n              articles : articleState,\r\n              queryStatus: false\r\n            }\r\n          )\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  // Basic API error handling, prints to console, needs UI interaction\r\n  handleResponseError(response) {\r\n    console.log('There was an error: Response ' + response.status);\r\n  }\r\n\r\n  showDropdownMenu(event) {\r\n    event.preventDefault();\r\n    this.setState({ displayMenu: true }, () => {\r\n      document.addEventListener('click', this.hideDropdownMenu);\r\n    });\r\n  }\r\n\r\n  hideDropdownMenu() {\r\n    this.setState({ displayMenu: false }, () => {\r\n      document.removeEventListener('click', this.hideDropdownMenu);\r\n    });\r\n  }\r\n\r\n  changeSelectedSection(section) {\r\n    this.setState({ selectedSection: section, queryStatus: true}, () => {\r\n      this.getArticles();\r\n    })\r\n  }\r\n\r\n  buildURLRequest() {\r\n    let url = '';\r\n\r\n    //Determine live feed or top articles\r\n    if (this.state.liveFeed) {\r\n      url = 'https://api.nytimes.com/svc/news/v3/content/all/' + this.state.selectedSection.value + '.json?offset=0&api-key=';\r\n    } else {\r\n\r\n      //Check if value is equal to 'all' then replace with equivalent string for top stories endpoint (home)\r\n      if (this.state.selectedSection.value === 'all') {\r\n        url = 'https://api.nytimes.com/svc/topstories/v2/home.json?api-key=';\r\n      } else {\r\n        url = 'https://api.nytimes.com/svc/topstories/v2/' + this.state.selectedSection.value + '.json?api-key=';\r\n      }\r\n    }\r\n\r\n    // attach API Key\r\n    url = url + process.env.REACT_APP_CLIENT_ID;\r\n\r\n    return url;\r\n  }\r\n\r\n  toggleLiveOrTop() {\r\n    if (this.state.liveFeed) {\r\n      this.setState({ liveFeed: false, queryStatus : true}, () => {\r\n        this.getArticles();\r\n      })\r\n    } else {\r\n      this.setState({ liveFeed: true,  queryStatus : true}, () => {\r\n        this.getArticles();\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let currentState = this.state.articles;\r\n\r\n      return (\r\n        <div className=\"App\">\r\n          <div className=\"header-wrapper\">\r\n            <header className=\"App-header\">\r\n              <h1> NYT Feed:\r\n\r\n              {this.state.liveFeed ? (' Recent Stories') : (' Top Stories')}\r\n\r\n              </h1>\r\n              <Toolbar props={sectionsConstant} showDropdownMenu={this.showDropdownMenu} state={this.state} changeSelectedSection={this.changeSelectedSection} toggle={this.toggleLiveOrTop}/>\r\n            </header>\r\n          </div>\r\n\r\n          { this.state.queryStatus ? (\r\n            <div class=\"loading\">\r\n              <div class=\"spinner\">\r\n                <div class=\"mask\">\r\n                  <div class=\"maskedCircle\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"feed\">\r\n            {currentState.map(function(article) {\r\n              return <Article props={article} key={article.url} />\r\n            })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}